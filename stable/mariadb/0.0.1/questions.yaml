# groups:
#   - name: "Container Image"
#     description: "Image to be used for container"
#   - name: "Workload Configuration"
#     description: "Configure workload deployment"
#   - name: "Configuration"
#     description: "additional container configuration"
#   - name: "Networking"
#     description: "Configure / service for container"
#   - name: "Storage"
#     description: "Persist and share data that is separate from the lifecycle of the container"
#   - name: "Resources and Devices"
#     description: "Specify resources/devices to be allocated to workload"
#   - name: "Reverse Proxy Configuration"
#     description: "Reverse Proxy configuration"
#   - name: "Advanced"
#     description: "Advanced Configuration"
#   - name: "WARNING"
#     description: "WARNING"
# portals:
#   web_portal:
#     protocols:
#       - "$kubernetes-resource_configmap_portal_protocol"
#     host:
#       - "$kubernetes-resource_configmap_portal_host"
#     ports:
#       - "$kubernetes-resource_configmap_portal_port"
# questions:
#   - variable: portal
#     group: "Container Image"
#     label: "Configure Portal Button"
#     schema:
#       type: dict
#       hidden: false
#       attrs:
#         - variable: enabled
#           label: "Enable"
#           description: "enable the portal button"
#           schema:
#             hidden: false
#             editable: false
#             type: boolean
#             default: true
#         - variable: ingressPort
#           label: "Port when ingress is not using 443"
#           description: "Advanced setting, please enter a different port to use if Ingress uses something other than port 443"
#           schema:
#             hidden: false
#             editable: true
#             type: int
#             default: 449            
#   # Update Policy
#   - variable: strategyType
#     group: "Container Image"
#     label: "Update Strategy"
#     schema:
#       type: string
#       default: "Recreate"
#       enum:
#         - value: "RollingUpdate"
#           description: "Create new pods and then kill old ones"
#         - value: "Recreate"
#           description: "Kill existing pods before creating new ones"
#   # Configure Time Zone
#   - variable: timezone
#     group: "Container Image"
#     label: "Timezone"
#     schema:
#       type: string
#       default: "Asia/Shanghai"
#       $ref:
#         - "definitions/timezone"


#   # Configure Enviroment Variables
#   - variable: environmentVariables
#     label: "Image environment"
#     group: "Configuration"
#     schema:
#       type: list
#       default: []
#       items:
#         - variable: environmentVariable
#           label: "Environment Variable"
#           schema:
#             type: dict
#             attrs:
#               - variable: name
#                 label: "Name"
#                 schema:
#                   type: string
#               - variable: value
#                 label: "Value"
#                 schema:
#                   type: string
#   # Enable Host Networking
#   - variable: hostNetwork
#     group: "Networking"
#     label: "Enable Host Networking"
#     schema:
#       type: boolean
#       default: false
#       hidden: true
#   - variable: services
#     group: "Networking"
#     label: "Configure Service"
#     schema:
#       type: dict
#       hidden: true
#       attrs:
#         - variable: main
#           label: "Main service"
#           description: "The Primary service on which the healthcheck runs, often the webUI"
#           schema:
#             type: dict
#             hidden: true
#             attrs:
#               - variable: enabled
#                 label: "Enable the service"
#                 schema:
#                   type: boolean
#                   default: true
#                   hidden: true
#               - variable: type
#                 label: "Service type"
#                 description: "ClusterIP's are only internally available, nodePorts expose the container to the host node System"
#                 schema:
#                   type: string
#                   default: "ClusterIP"
#                   hidden: true
#                   enum:
#                     - value: "ClusterIP"
#                       description: "ClusterIP"
#               - variable: port
#                 label: "Port configuration"
#                 schema:
#                   type: dict
#                   attrs:
#                     - variable: protocol
#                       label: "Port Type"
#                       schema:
#                         type: string
#                         default: "HTTP"
#                         hidden: true
#                         enum:
#                           - value: HTTP
#                             description: "HTTP"
#                     - variable: port
#                       label: "container port"
#                       schema:
#                         type: int
#                         default: 8080
#                         editable: false
#                         hidden: true
#                     - variable: targetport
#                       label: "Internal Service port"
#                       description: "When connecting internally to this App, you'll need this port"
#                       schema:
#                         type: int
#                         default: 8080
#                         editable: false
#                         hidden: true
#                     - variable: nodePort
#                       label: "(optional) host nodePort to expose to"
#                       description: "only get used when nodePort is selected"
#                       schema:
#                         type: int
#                         min: 9000
#                         max: 65535
#                         default: 36052
#                         required: true
#                         hidden: true


# ## TrueCharts Specific
#   # - variable: persistence
#   #   label: "Integrated Persistent Storage"
#   #   description: "Websocket Service"
#   #   group: "Storage"
#   #   schema:
#   #     type: dict
#   #     attrs:
#   #       - variable: data
#   #         label: "App Config Storage"
#   #         description: "Stores the Application Configuration."
#   #         schema:
#   #           type: dict
#   #           attrs:
#   #             - variable: enabled
#   #               label: "Enable the storage"
#   #               schema:
#   #                 type: boolean
#   #                 default: true
#   #                 hidden: true
#   #             - variable: storageClass
#   #               label: "Type of Storage"
#   #               description: " Warning: Anything other than Internal will break rollback!"
#   #               schema:
#   #                 type: string
#   #                 default: ""
#   #                 enum:
#   #                   - value: ""
#   #                     description: "Internal"
#   #             - variable: mountPath
#   #               label: "mountPath"
#   #               description: "Path inside the container the storage is mounted"
#   #               schema:
#   #                 type: string
#   #                 default: "/data"
#   #                 hidden: true
#   #             - variable: emptyDir
#   #               label: "Mount a ramdisk instead of actual storage"
#   #               schema:
#   #                 type: boolean
#   #                 default: false
#   #                 hidden: true
#   #             - variable: accessMode
#   #               label: "Access Mode (Advanced)"
#   #               description: "Allow or disallow multiple PVC's writhing to the same PVC"
#   #               schema:
#   #                 type: string
#   #                 default: "ReadWriteOnce"
#   #                 enum:
#   #                   - value: "ReadWriteOnce"
#   #                     description: "ReadWriteOnce"
#   #                   - value: "ReadOnlyMany"
#   #                     description: "ReadOnlyMany"
#   #                   - value: "ReadWriteMany"
#   #                     description: "ReadWriteMany"
#   #             - variable: size
#   #               label: "Size quotum of storage"
#   #               schema:
#   #                 type: string
#   #                 default: "100Gi"
#   #       - variable: db
#   #         label: "Database Storage"
#   #         description: "Stores the Application database."
#   #         schema:
#   #           type: dict
#   #           attrs:
#   #             - variable: enabled
#   #               label: "Enable the storage"
#   #               schema:
#   #                 type: boolean
#   #                 default: true
#   #                 hidden: true
#   #             - variable: nameOverride
#   #               label: "Override PVC Name (advanced)"
#   #               description: "Forces a certain name for the PVC"
#   #               schema:
#   #                 type: string
#   #                 default: "db"
#   #                 hidden: true
#   #             - variable: storageClass
#   #               label: "Type of Storage"
#   #               description: " Warning: Anything other than Internal will break rollback!"
#   #               schema:
#   #                 type: string
#   #                 default: ""
#   #                 enum:
#   #                   - value: ""
#   #                     description: "Internal"
#   #             - variable: mountPath
#   #               label: "mountPath"
#   #               description: "Path inside the container the storage is mounted"
#   #               schema:
#   #                 type: string
#   #                 default: ""
#   #                 hidden: true
#   #             - variable: emptyDir
#   #               label: "Mount a ramdisk instead of actual storage"
#   #               schema:
#   #                 type: boolean
#   #                 default: false
#   #                 hidden: true
#   #             - variable: accessMode
#   #               label: "Access Mode (Advanced)"
#   #               description: "Allow or disallow multiple PVC's writhing to the same PVC"
#   #               schema:
#   #                 type: string
#   #                 default: "ReadWriteOnce"
#   #                 enum:
#   #                   - value: "ReadWriteOnce"
#   #                     description: "ReadWriteOnce"
#   #                   - value: "ReadOnlyMany"
#   #                     description: "ReadOnlyMany"
#   #                   - value: "ReadWriteMany"
#   #                     description: "ReadWriteMany"
#   #             - variable: size
#   #               label: "Size quotum of storage"
#   #               schema:
#   #                 type: string
#   #                 default: "100Gi"
#   #       - variable: dbbackup
#   #         label: "Database Backup Storage"
#   #         description: "Stores the Application database backups."
#   #         schema:
#   #           type: dict
#   #           attrs:
#   #             - variable: enabled
#   #               label: "Enable the storage"
#   #               schema:
#   #                 type: boolean
#   #                 default: true
#   #                 hidden: true
#   #             - variable: storageClass
#   #               label: "Type of Storage"
#   #               description: " Warning: Anything other than Internal will break rollback!"
#   #               schema:
#   #                 type: string
#   #                 default: ""
#   #                 enum:
#   #                   - value: ""
#   #                     description: "Internal"
#   #             - variable: mountPath
#   #               label: "mountPath"
#   #               description: "Path inside the container the storage is mounted"
#   #               schema:
#   #                 type: string
#   #                 default: ""
#   #                 hidden: true
#   #             - variable: emptyDir
#   #               label: "Mount a ramdisk instead of actual storage"
#   #               schema:
#   #                 type: boolean
#   #                 default: false
#   #                 hidden: true
#   #             - variable: accessMode
#   #               label: "Access Mode (Advanced)"
#   #               description: "Allow or disallow multiple PVC's writhing to the same PVC"
#   #               schema:
#   #                 type: string
#   #                 default: "ReadWriteOnce"
#   #                 enum:
#   #                   - value: "ReadWriteOnce"
#   #                     description: "ReadWriteOnce"
#   #                   - value: "ReadOnlyMany"
#   #                     description: "ReadOnlyMany"
#   #                   - value: "ReadWriteMany"
#   #                     description: "ReadWriteMany"
#   #             - variable: size
#   #               label: "Size quotum of storage"
#   #               schema:
#   #                 type: string
#   #                 default: "100Gi"
#   - variable: customStorage
#     label: "Custom app storage"
#     group: "Storage"
#     schema:
#       type: list
#       default: []
#       items:
#         - variable: volumeMount
#           label: "Custom Storage"
#           schema:
#             type: dict
#             attrs:
#               - variable: enabled
#                 label: "Enabled"
#                 schema:
#                   type: boolean
#                   default: true
#                   required: true
#                   hidden: true
#                   editable: false
#               - variable: setPermissions
#                 label: "Automatic Permissions"
#                 description: "Automatically set permissions on install"
#                 schema:
#                   type: boolean
#                   default: true
#                   hidden: false
#               - variable: readOnly
#                 label: "Mount as ReadOnly"
#                 description: "prevent any write from being done to the mounted volume"
#                 schema:
#                   type: boolean
#                   default: false
#                   hidden: false
#               - variable: emptyDir
#                 label: "emptyDir"
#                 schema:
#                   type: boolean
#                   default: false
#                   hidden: true
#                   editable: false
#               - variable: mountPath
#                 label: "Mount Path"
#                 description: "Path to mount inside the pod"
#                 schema:
#                   type: path
#                   required: true
#                   default: ""
#                   editable: true
#               - variable: hostPath
#                 label: "Host Path"
#                 schema:
#                   type: hostpath
#                   required: true
#   - variable: ingress
#     label: ""
#     group: "Reverse Proxy Configuration"
#     schema:
#       type: dict
#       attrs:
#         - variable: main
#           label: "WebUI"
#           schema:
#             type: dict
#             attrs:
#               - variable: certType
#                 label: "Select Reverse-Proxy Type"
#                 schema:
#                   type: string
#                   default: "selfsigned"
#                   enum:
#                     - value: "disabled"
#                       description: "Disabled"
#                     - value: ""
#                       description: "No Encryption/TLS/Certificates"
#                     - value: "selfsigned"
#                       description: "Self-Signed Certificate"
#                     - value: "ixcert"
#                       description: "TrueNAS SCALE Certificate"
#               - variable: type
#                 label: "Reverse Proxy Type"
#                 schema:
#                   type: string
#                   default: "HTTP"
#                   hidden: true
#                   editable: false
#                   required: true
#               - variable: serviceName
#                 label: "Service name to proxy to"
#                 schema:
#                   hidden: true
#                   editable: false
#                   type: string
#                   default: ""
#               - variable: entrypoint
#                 label: "Select Entrypoint"
#                 schema:
#                   show_if: [["certType", "!=", "disabled"]]
#                   type: string
#                   default: "websecure"
#                   required: true
#                   enum:
#                     - value: "websecure"
#                       description: "Websecure: HTTPS/TLS port 443"
#               - variable: hosts
#                 label: "Hosts"
#                 schema:
#                   show_if: [["certType", "!=", "disabled"]]
#                   type: list
#                   default: []
#                   items:
#                     - variable: host
#                       label: "Host"
#                       schema:
#                         type: dict
#                         attrs:
#                           - variable: host
#                             label: "Domain Name"
#                             required: true
#                             schema:
#                               type: string
#                           - variable: path
#                             label: "path"
#                             schema:
#                               type: string
#                               required: true
#                               hidden: true
#                               default: "/"
#               - variable: certificate
#                 label: "Select TrueNAS SCALE Certificate"
#                 schema:
#                   type: int
#                   show_if: [["certType", "=", "ixcert"]]
#                   $ref:
#                     - "definitions/certificate"
#               - variable: authForwardURL
#                 label: "Forward Authentication URL"
#                 schema:
#                   show_if: [["certType", "!=", "disabled"]]
#                   type: string
#                   default: ""

#   - variable: UMASK
#     group: "Advanced"
#     label: "UMASK"
#     description: "Sets the UMASK env var for LinuxServer.io (compatible) containers"
#     schema:
#       type: string
#       default: "002"
#   # Enable privileged
#   - variable: securityContext
#     group: "Advanced"
#     label: "Security Context"
#     schema:
#       type: dict
#       attrs:
#         - variable: privileged
#           label: "Enable privileged mode for Common-Chart based charts"
#           schema:
#             type: boolean
#             default: false
#   # Set Pod Security Policy
#   - variable: podSecurityContext
#     group: "Advanced"
#     label: "Pod Security Context"
#     schema:
#       type: dict
#       attrs:
#         - variable: runAsNonRoot
#           label: "runAsNonRoot"
#           schema:
#             type: boolean
#             default: true
#         - variable: runAsUser
#           label: "runAsUser"
#           description: "The UserID of the user running the application"
#           schema:
#             type: int
#             default: 568
#         - variable: runAsGroup
#           label: "runAsGroup"
#           description: The groupID this App of the user running the application"
#           schema:
#             type: int
#             default: 568
#         - variable: supplementalGroups
#           label: "supplementalGroups"
#           description: "Additional groups this App needs access to"
#           schema:
#             type: list
#             default: []
#             items:
#               - variable: Group
#                 label: "Group"
#                 schema:
#                   type: int
#                   default: 568
#         - variable: fsGroup
#           label: "fsGroup"
#           description: "The group that should own ALL storage."
#           schema:
#             type: int
#             default: 568
#         - variable: fsGroupChangePolicy
#           label: "When should we take ownership?"
#           schema:
#             type: string
#             default: "OnRootMismatch"
#             enum:
#               - value: "OnRootMismatch"
#                 description: "OnRootMismatch"
#               - value: "Always"
#                 description: "Always"
groups:
  - name: "Container Image"
    description: "configure container image"
  - name: "Configuration"
    description: "additional container configuration"
  - name: "Networking"
    description: "Networking / service configuration"
  - name: "Storage"
    description: "configure app volume mounts"
  - name: "Ingress"
    description: "Reverse Proxy configuration"
    
portals:
  web_portal:
    protocols:
      - "http"
    host:
      - "$node_ip"
    ports:
      - "$variable-service.port.nodePort"

questions:
  # Image related
  - variable: image
    description: "Docker Image Details"
    label: "Docker Image"
    group: "Container Image"
    schema:
      type: dict
      required: true
      attrs:
        - variable: repository
          description: "Docker image repository"
          label: "Image repository"
          schema:
            type: string
            required: true
            default: "linuxserver/mariadb"
        - variable: tag
          description: "Tag to use for specified image"
          label: "Image Tag"
          schema:
            type: string
            default: "alpine-10.5.8-r0-ls6"
        - variable: pullPolicy
          description: "Docker Image Pull Policy"
          label: "Image Pull Policy"
          schema:
            type: string
            default: "IfNotPresent"
            enum:
              - value: "IfNotPresent"
                description: "Only pull image if not present on host"
              - value: "Always"
                description: "Always pull image even if present on host"
              - value: "Never"
                description: "Never pull image even if it's not present on host"
                

  - variable: environmentVariables
    label: "Image environment"
    group: "Configuration"
    schema:
      type: list
      default: []
      items:
        - variable: environmentVariable
          label: "Environment Variable"
          schema:
            type: dict
            attrs:
              - variable: name
                label: "Name"
                schema:
                  type: string
              - variable: value
                label: "Value"
                schema:
                  type: string
                  

                  
  - variable: service
    group: "Networking"
    label: "Configure Service"
    schema:
      type: dict
      attrs:
        - variable: type
          label: "Service type"
          schema:
            type: string
            default: "ClusterIP"
            enum:
              - value: "NodePort"
                description: "NodePort"
              - value: "ClusterIP"
                description: "ClusterIP"
            show_subquestions_if: "NodePort"
            subquestions:
              - variable: port
                label: "Port configuration"
                schema:
                  type: dict
                  attrs:
                    - variable: port
                      label: "container port"
                      schema:
                        type: int
                        default: 80
                        editable: false
                    - variable: nodePort
                      label: "Node Port to expose for UI"
                      schema:
                        type: int
                        min: 9000
                        max: 65535
                        default: 36082
                        required: true
                        
  # Enable Host Networking
  - variable: hostNetwork
    group: "Networking"
    label: "Enable Host Networking"
    schema:
      type: boolean
      default: false

# TrueCharts Specific
  - variable: appVolumeMounts
    label: "app storage"
    group: "Storage"
    schema:
      type: dict
      attrs:
        - variable: config
          label: "Database dataset"
          schema:
            type: dict
            $ref:
              - "normalize/ixVolume"
            attrs:
              - variable: enabled
                label: "Enabled"
                schema:
                  type: boolean
                  default: true
                  required: true
                  hidden: true
                  editable: false
              - variable: setPermissions
                label: "Automatic Permissions"
                description: "Automatically set permissions on install"
                schema:
                  type: boolean
                  default: true
                  hidden: false 
              - variable: emptyDir
                label: "emptyDir"
                schema:
                  type: boolean
                  default: false
                  hidden: true
                  editable: false
              - variable: datasetName
                label: "Dataset Name"
                schema:
                  type: string
                  default: "config"
                  required: true
                  editable: true
              - variable: mountPath
                label: "Mount Path"
                description: "Path to mount inside the pod"
                schema:
                  type: path
                  required: true
                  default: "/config"
                  editable: false
              - variable: hostPathEnabled
                label: "host Path Enabled"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path"
                      schema:
                        type: hostpath
                        required: true
